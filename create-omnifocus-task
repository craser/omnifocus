#!/usr/bin/ruby

require 'date'
require 'time'

# TODO: Parse "7 days"
def get_due_date(string)
  begin
    string = get_meta(string)
    date = parse_date(string)
    if (date)
      time_string = string.match(/\d{1,2}(:\d\d)?(am|pm)/);
      time = Time.parse(time_string.to_s) rescue Time.parse("7:00 PM")
      formatted = "#{date.strftime("%m/%d/%Y")} #{time.strftime("%I:%M %p")}"
      return formatted
    else
      return ""
    end
  rescue
    return "7:00 PM"
  end
end

def parse_date(string)
  date = nil
  if (string =~ /tomorrow/i)
    date = Date.today + 1
  elsif (string =~ /\d{1,2}\/\d{1,2}(\/\d\d(\d\d)?)?/)
    line = string.match(/(\d{1,2})\/(\d{1,2})(\/(\d{2,4}))?/)
    month = line[1]
    day = line[2]
    year = line[4] || Date.today.year
    dateString = "#{year}-#{month}-#{day}"
    puts "parsing #{dateString} as date"
    date = Date.parse(dateString) rescue Date.today
  elsif (get_tags(string).include?("scrum"))
    puts "parsing #{string} as scrum date"
    date = Date.parse(string) rescue nil
  else
    puts "parsing #{string} as non-scrum date"
    puts "context: #{get_tags(string)}"
    date = Date.parse(string) rescue Date.today
  end
  date += (date < Date.today) ? 7 : 0
  return date    
end

def get_project(string)
  string = get_meta(string)
  project = /\.(\w+)/.match(string).captures[0] rescue "work"
  return project
end

def get_tags(string)
  string = get_meta(string)
  tags = string.scan(/(\W|^)[#:](\w+)/).map do |m|
    m[1]
  end
  return tags
end  

def get_meta(string)
  meta = string.gsub(/^.*?(\/\/|$)/, "")
  return meta
end

def get_task_name(string)
  string = string.gsub(/\/\/.*$/, "")
  return string;
end
      
command = ARGV.join(" ")
project = get_project(command)
tags = get_tags(command)
task_name = get_task_name(command)
due_date = get_due_date(command)
      

puts "project : #{project}"
puts "tags : #{tags}"
puts "due date: #{due_date}"
puts "task    : #{task_name}"

puts `osascript #{__dir__}/CreateTask.scpt "#{tags[0]}" "#{project}" "#{task_name}" "#{due_date}"` # FIXME: only passes first tag

